name: build, dockerize & push images

on:
  push:
    branches:
      - UNIR*
  
jobs:
  build:

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        ref: ${{ github.ref }}
        java-version: 1.8
        server-id: central # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file
    - uses: kolpav/purge-artifacts-action@v1
      with:
        token: ${{ secrets.token }}
        expire-in: 0 # Setting this to 0 will delete all artifacts

    - name: Setup branch and GPG public key 
      run: |
        # Strip git ref prefix from version
        echo "::set-env name=BRANCH_NAME::$(echo ${{ github.ref }} | sed -e 's,.*/\(.*\),\1,')"
        echo ${{ env.BRANCH_NAME }}
        # adding extra line    
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-${{ env.BRANCH_NAME }}
    
    - name: Setup the settings file for jfrog server
      run: echo "<settings>  <servers> <server> <username>${{secrets.jfrog_user}}</username> <password>${{secrets.jfrog_secret}}</password><id>central</id> </server> </servers> <profiles>   <profile>     <repositories>         <repository>         <snapshots>           <enabled>false</enabled>         </snapshots>         <id>central</id>         <name>libs-release</name>         <url>http://52.172.8.144:8040/artifactory/libs-release</url>       </repository>       <repository>         <snapshots />         <id>snapshots</id>         <name>libs-snapshot</name>         <url>http://52.172.8.144:8040/artifactory/libs-snapshot</url>       </repository>     </repositories>     <pluginRepositories>       <pluginRepository>         <snapshots>           <enabled>false</enabled>         </snapshots>         <id>central</id>         <name>libs-release</name>      <url>http://52.172.8.144:8040/artifactory/libs-release</url>      </pluginRepository>        <pluginRepository>        <snapshots />         <id>snapshots</id>          <name>libs-snapshot</name>          <url>http://52.172.8.144:8040/artifactory/libs-snapshot</url>       </pluginRepository>     </pluginRepositories> <id>artifactory</id>    </profile>  </profiles>  <activeProfiles>    <activeProfile>artifactory</activeProfile>  </activeProfiles></settings> " > $GITHUB_WORKSPACE/settings.xml

    - name: Publish the maven package
      run: |
        chmod +x ./deploy.sh
        mvn clean install -Dmaven.test.skip=true -Dgpg.skip=true -s $GITHUB_WORKSPACE/settings.xml -f pom.xml
        #cd registration/registration-client/target
        ls -ltr registration/registration-client/
        ls -ltr registration/registration-client/target/
        mv registration/registration-client/target/*.zip registration/registration-client/target/reg-client.zip
        curl -u ${{secrets.jfrog_user}}:${{secrets.jfrog_secret}} -X PUT http://52.172.8.144:8040/artifactory/libs-release/io/mosip/wuri/registration/registration-client/1.1.1/ -T registration/registration-client/target/MANIFEST.MF
        curl -u ${{secrets.jfrog_user}}:${{secrets.jfrog_secret}} -X PUT http://52.172.8.144:8040/artifactory/libs-release/io/mosip/wuri/registration/registration-client/1.1.1/ -T registration/registration-client/target/reg-client.zip
        #mv registration/registration-client/target/*.zip registration/registration-client/target/reg-client.zip
        #zip  registration/registration-client/target/reg-client.zip registration/registration-client/target/MANIFEST.MF
        #zip -r registration/registration-client/target/reg-client.zip registration/registration-client/target/lib/
      env:
        GITHUB_TOKEN: ${{ secrets.token }}