name: Build and Release the REG
#checking test 
on:
  pull_request:
    types: [closed]
  push:
    branches:
      - release

jobs:
  BuildandRelease:
    runs-on: ubuntu-latest
    env:
      NAMESPACE: ${{ secrets.dev_namespace_docker_hub }}
      SERVICE_NAME: artifactory-service
      #SERVICE_LOCATION: pre-registration-ui

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Setup branch name
      run: |
          # Strip git ref prefix from version
          echo "BRANCH_NAME=$(echo ${{ github.ref }} | sed -e 's,.*/\(.*\),\1,')" >> $GITHUB_ENV

    - name: Package application
      run: make global_build

    - name: CREATE REG DIR
      run: make make_output_dir

    - name: COPY NECESSARY LOGS
      run: make copy_necessary_files

    - name:  Unzip Application
      run: make unzip_app

    - name:  Copy libraries
      run: make copy_libs

    - name:  Zip the final directory
      run: make zip_the_final_directory

    - name: Build image
      run: docker build . --file Dockerfile-For-Artifactory  --build-arg REG_VERSION=$BRANCH_NAME --tag $SERVICE_NAME

    - name: Log into registry
      run: echo "${{ secrets.release_docker_hub }}" | docker login -u ${{ secrets.actor_docker_hub }} --password-stdin

    - name: Push image
      run: |
        IMAGE_ID=$NAMESPACE/$SERVICE_NAME
        # Change all uppercase to lowercase
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        VERSION=$BRANCH_NAME
        echo "push version $VERSION"
        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION
        docker tag $SERVICE_NAME $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:$VERSION


